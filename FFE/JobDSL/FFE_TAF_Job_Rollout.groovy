job('FFE_TAF'){
    description('FFE TAF job - autogenerated using JobDSL - all manual changes will be overwritten!')
    concurrentBuild(true)
    wrappers{
        preBuildCleanup()
        timestamps()
        buildName('#${BUILD_NUMBER}  Deployment ID = ${ENV,var="hostname"}')
    }
    logRotator{
        daysToKeep(30)
    }
    parameters{
        stringParam(
            'enmIso',
            '',
            ''
        )
        stringParam(
            'enmDrop',
            '',
            ''
        )
        stringParam(
            'NssProductSetVersion',
            '',
            ''
        )
        stringParam(
            'hostname',
            '',
            ''
        )
        textParam(
            'taf_schedule',
            '',
            '''<b>Full XML must be entered at build time</b><br>
TAF Schedule Example:<br>
<textarea rows="16" cols="65">
<?xml version="1.0"?>
<schedule xmlns="http://taf.lmera.ericsson.se/schema/te"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://taf.lmera.ericsson.se/schema/te http://taf.lmera.ericsson.se/schema/te/schedule/xml">

<item>
    <name>Install Licenses</name>
  <component>com.ericsson.oss.services.lcm:ERICTAFlicensecontrolmonitoringservice_CXP9031454</component>
    <suites>LicenseRollout.xml</suites>
</item>
<item-group parallel="false">
<item timeout-in-seconds="3600">
<name>Maintrack Entry Loop - Node agnostic Data Driven test</name>
<component>com.ericsson.oss.services.mtg:ERICTAFmaintracknodeagnostictest_CXP9032907</component>
<suites>nodeAgnosticTest.xml</suites>
</item>

<item timeout-in-seconds="1800">
<name>FM_Acceptance_Test - GameOfRules</name>
<component>com.ericsson.oss.testware.fm:ERICTAFfmacceptancetestware_CXP9032937</component>
<suites>FM_CLI_GameOfRules.xml</suites>
<groups>SmokeTest</groups>
</item>


</item-group>

</schedule>
</textarea>'''
        )
        stringParam(
            'taf_profiles',
            '',
            '<p>This parameter allows the selection of the profile to be used during the run<br>The profile is a property that, in the testware, selects a series of predefined settings for the execution of the testware itself.<br>Examples include smokeTest,license_rollout </p>'
        )
        stringParam(
            'mt_csv_file_uri',
            '',
            ''
        )
        stringParam(
            'internal_nodes',
            '',
            ''
        )
        labelParam('jenkins_agent'){
            defaultValue('')
            description('')
        }
    }
  steps {
    shell ('''set +x
taf_version=$(curl --header 'Accept: application/json' -X GET -ks "https://ci-portal.seli.wh.rnd.internal.ericsson.com/api/deployment/deploymentutilities/productSet/ENM/version/${NssProductSetVersion}/?format=json" | egrep -o "tafVersion.*?" | cut -d '"' -f3)
echo "taf_version=${taf_version}" >> "${WORKSPACE}"/build.properties
wget -q "https://arm1s11-eiffel004.eiffel.gic.ericsson.se:8443/nexus/service/local/artifact/maven/redirect?r=releases&g=com.ericsson.ci.kgb&a=kgb-scripts&p=jar&v=RELEASE" -O kgb-scripts.jar
jar -xvf kgb-scripts*.jar 2>&1 >/dev/null''')
    environmentVariables{
      propertiesFile('$WORKSPACE/build.properties')
    }
    baselineDefinedMessageDispatcher {
      ciArtifacts {
        isoProduct("ENM")
        isoDrop("\${enmDrop}")
        isoVersion("\${enmIso}")
        jobType("Entry Loop")
        teamName("")
        artifactsClassName("com.ericsson.oss.axis.BaselineDefinedMessageDispatcher\$ArtifactAsIso\$1")
      }
      armId("")
      downloadRepoName("")
      uploadRepoName("")
      httpString("https://arm1s11-eiffel004.eiffel.gic.ericsson.se:8443/nexus/content/groups/public")
      ftpString("")
      nfsString("")
      armName("")
      armPassword("")
      armDescription("")
      sutClusterId("\${hostname}")
      citeHostPropertiesFile("")
      testwarePropertiesFile("")
      schedule {
        xml('''\${taf_schedule}''')
        testPropertiesAsString(null)
        scheduleClassName('com.ericsson.oss.axis.BaselineDefinedMessageDispatcher\$ScheduleAsXml\$1')
        name(null)
        groupId(null)
        artifactId(null)
        version(null)
        scheduleType(null)
        tafScheduleName(null)
        tafScheduleVersion(null)
      }
      tunnellingOn("true")
      tafVersion("\${taf_version}")
      userDefinedGAVs(null)
      additionalTestProperties('''
usernameForBrowserAuthentication=vnfuser
acceptableRateForBackup=60
host.UiTestGrid.port.http=4444
taf.config.dit.deployment.name=${hostname}
MT_CSV_FILE_URI=${mt_csv_file_uri}
host.authenticationServer.port.https=443
drop=${enmDrop}
timeToSleep=20000
taf.deploymentType=cloud
host.authenticationServer.ip=${hostname}.athtem.eei.ericsson.se
host.UiTestGrid.user.root.pass=shroot
node.cpp.sync.retries=270
smoke.vusers=3
host.UiTestGrid.user.root.type=ADMIN
taf.config.dit.deployment.internal.nodes=${internal_nodes}
private.key.location=/var/tmp/private_key.pem
acceptableRateForRestore=140
node.comecim.sync.retries=180
taf_ui.default_OS=Linux
passwordForBrowserAuthentication=passw0rd
node.sync.repeat=180
host.UiTestGrid.type=SELENIUM_GRID
taf.profiles=${taf_profiles}
host.UiTestGrid.ip=192.168.0.231
host.UiTestGrid.port.ssh=22
taf_ui.default_browser=FIREFOX
node.comecim.sync.timeout=1000
          ''')
      breakBuildOnTestsFailure("true")
      ciFwkHost("https://ci-portal.seli.wh.rnd.internal.ericsson.com/")
      tafTestExecutorHostname("\${hostname}.athtem.eei.ericsson.se")
      tafTestExecutorPort("8080")
      globalTestGroups("")
    }
  }
}